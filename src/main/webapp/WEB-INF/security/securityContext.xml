<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
 		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  		http://www.springframework.org/schema/security  
  		http://www.springframework.org/schema/security/spring-security-3.1.xsd
                http://www.springframework.org/schema/context
 		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
  
    <security:global-method-security secured-annotations="enabled" />
    
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/init" access="permitAll" />
        <security:intercept-url pattern="/login" access="permitAll" />
        <security:intercept-url pattern="/*" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <security:form-login 
            login-page="/login" 
            default-target-url="/" 
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password" />
        <security:logout logout-success-url="/login?logout" />
      
        <!-- <security:csrf/> -->
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=
		    "select username,password, enabled from login_details where username=?"
                                        authorities-by-username-query=
		    "select username, authority from login_authorities where username=?" />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>
